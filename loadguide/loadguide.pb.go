// Code generated by protoc-gen-go.
// source: loadguide.proto
// DO NOT EDIT!

/*
Package loadguide is a generated protocol buffer package.

It is generated from these files:
	loadguide.proto

It has these top-level messages:
	PowerRequest
	LoadReply
*/
package loadguide

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PowerRequest struct {
	Core   int32 `protobuf:"varint,1,opt,name=core" json:"core,omitempty"`
	Weight int32 `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
}

func (m *PowerRequest) Reset()                    { *m = PowerRequest{} }
func (m *PowerRequest) String() string            { return proto.CompactTextString(m) }
func (*PowerRequest) ProtoMessage()               {}
func (*PowerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PowerRequest) GetCore() int32 {
	if m != nil {
		return m.Core
	}
	return 0
}

func (m *PowerRequest) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type LoadReply struct {
	Url      string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Requests int32  `protobuf:"varint,2,opt,name=requests" json:"requests,omitempty"`
	Workers  int32  `protobuf:"varint,3,opt,name=workers" json:"workers,omitempty"`
}

func (m *LoadReply) Reset()                    { *m = LoadReply{} }
func (m *LoadReply) String() string            { return proto.CompactTextString(m) }
func (*LoadReply) ProtoMessage()               {}
func (*LoadReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoadReply) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *LoadReply) GetRequests() int32 {
	if m != nil {
		return m.Requests
	}
	return 0
}

func (m *LoadReply) GetWorkers() int32 {
	if m != nil {
		return m.Workers
	}
	return 0
}

func init() {
	proto.RegisterType((*PowerRequest)(nil), "loadguide.PowerRequest")
	proto.RegisterType((*LoadReply)(nil), "loadguide.LoadReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LoadGuide service

type LoadGuideClient interface {
	SendLoad(ctx context.Context, in *PowerRequest, opts ...grpc.CallOption) (*LoadReply, error)
}

type loadGuideClient struct {
	cc *grpc.ClientConn
}

func NewLoadGuideClient(cc *grpc.ClientConn) LoadGuideClient {
	return &loadGuideClient{cc}
}

func (c *loadGuideClient) SendLoad(ctx context.Context, in *PowerRequest, opts ...grpc.CallOption) (*LoadReply, error) {
	out := new(LoadReply)
	err := grpc.Invoke(ctx, "/loadguide.LoadGuide/SendLoad", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LoadGuide service

type LoadGuideServer interface {
	SendLoad(context.Context, *PowerRequest) (*LoadReply, error)
}

func RegisterLoadGuideServer(s *grpc.Server, srv LoadGuideServer) {
	s.RegisterService(&_LoadGuide_serviceDesc, srv)
}

func _LoadGuide_SendLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadGuideServer).SendLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/loadguide.LoadGuide/SendLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadGuideServer).SendLoad(ctx, req.(*PowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadGuide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "loadguide.LoadGuide",
	HandlerType: (*LoadGuideServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendLoad",
			Handler:    _LoadGuide_SendLoad_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "loadguide.proto",
}

func init() { proto.RegisterFile("loadguide.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xc9, 0x4f, 0x4c,
	0x49, 0x2f, 0xcd, 0x4c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x59, 0x71, 0xf1, 0x04, 0xe4, 0x97, 0xa7, 0x16, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08,
	0x09, 0x71, 0xb1, 0x24, 0xe7, 0x17, 0xa5, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x81, 0xd9,
	0x42, 0x62, 0x5c, 0x6c, 0xe5, 0xa9, 0x99, 0xe9, 0x19, 0x25, 0x12, 0x4c, 0x60, 0x51, 0x28, 0x4f,
	0x29, 0x98, 0x8b, 0xd3, 0x27, 0x3f, 0x31, 0x25, 0x28, 0xb5, 0x20, 0xa7, 0x52, 0x48, 0x80, 0x8b,
	0xb9, 0xb4, 0x28, 0x07, 0xac, 0x8f, 0x33, 0x08, 0xc4, 0x14, 0x92, 0xe2, 0xe2, 0x28, 0x82, 0x98,
	0x5a, 0x0c, 0xd5, 0x08, 0xe7, 0x0b, 0x49, 0x70, 0xb1, 0x97, 0xe7, 0x17, 0x65, 0xa7, 0x16, 0x15,
	0x4b, 0x30, 0x83, 0xa5, 0x60, 0x5c, 0x23, 0x0f, 0x88, 0xa1, 0xee, 0x20, 0xd7, 0x09, 0x59, 0x73,
	0x71, 0x04, 0xa7, 0xe6, 0xa5, 0x80, 0x04, 0x84, 0xc4, 0xf5, 0x10, 0xde, 0x40, 0x76, 0xb2, 0x94,
	0x08, 0x92, 0x04, 0xdc, 0x3d, 0x4a, 0x0c, 0x4e, 0xaa, 0x5c, 0x82, 0x99, 0xf9, 0x7a, 0xe9, 0x45,
	0x05, 0xc9, 0x08, 0x05, 0x4e, 0x7c, 0x70, 0xc3, 0x03, 0x40, 0x41, 0x11, 0xc0, 0x98, 0xc4, 0x06,
	0x0e, 0x13, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x91, 0xa5, 0x91, 0x92, 0x26, 0x01, 0x00,
	0x00,
}
